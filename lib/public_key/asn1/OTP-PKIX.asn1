OTP-PKIX {iso(1) identified-organization(3) dod(6) internet(1)
	private(4) enterprices(1) ericsson(193) otp(19) ssl(10)
	pkix1(1)}

DEFINITIONS EXPLICIT TAGS ::=

BEGIN

-- EXPORTS ALL

IMPORTS
        ATTRIBUTE, Extensions{}
        FROM PKIX-CommonTypes-2009

	CertificateSerialNumber, CertExtensions{}, NoticeReference
	FROM PKIX1Implicit-2009
	{iso(1) identified-organization(3) dod(6) internet(1) security(5)
	mechanisms(5) pkix(7) id-mod(0) id-mod-pkix1-implicit-02(59)}

       id-at-commonName, id-at-organizationName, id-at-organizationalUnitName,
       id-at-localityName, id-at-countryName, id-emailAddress,
       Validity, Version, SubjectPublicKeyInfo, SignatureAlgorithms,
       UniqueIdentifier, Name,
       id-qt-unotice, id-qt-cps
       FROM PKIX1Explicit-2009
       {iso(1) identified-organization(3) dod(6) internet(1)
	security(5) mechanisms(5) pkix(7) id-mod(0)
	id-mod-pkix1-explicit-02(51)}

	--Keys and Signatures
	AlgorithmIdentifier{}, SIGNATURE-ALGORITHM
	FROM AlgorithmInformation-2009
	{iso(1) identified-organization(3) dod(6) internet(1) security(5)
	mechanisms(5) pkix(7) id-mod(0)
	id-mod-algorithmInformation-02(58)};
--
-- Certificate
--

OTPCertificate  ::=  SEQUENCE  {
     tbsCertificate       OTPTBSCertificate,
     signatureAlgorithm    AlgorithmIdentifier{SIGNATURE-ALGORITHM,
                                    { SignatureAlgorithms }},
     signature            BIT STRING  }

OTPTBSCertificate  ::=  SEQUENCE  {

     version         [0]  Version DEFAULT v1,
     serialNumber         CertificateSerialNumber,
     signature            AlgorithmIdentifier{SIGNATURE-ALGORITHM,
                                    { SignatureAlgorithms }},
     issuer               Name,
     validity             Validity,
     subject              Name,
     subjectPublicKeyInfo SubjectPublicKeyInfo,
     ... ,
      [[2:               -- If present, version MUST be v2
      issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,
      subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL
      ]],
      [[3:               -- If present, version MUST be v3 --
      extensions      [3]  Extensions{{CertExtensions}} OPTIONAL
      ]], ... }

 -- We accept utf8String encoding of the US-ASCII
 -- country name code and the mix up with other country code systems
 -- that uses three characters instead of two.

 OTP-X520countryname ::= CHOICE {
       printableString   PrintableString (SIZE (2..3)),
       utf8String        UTF8String      (SIZE (2..3))
 }

-- We use this variation of SingleAttribute/AttributeTypeAndValue
-- when calculating the "short" hash of the certificate issuer.
-- See public_key:short_name_hash/1.

HashSingleAttribute ::= SEQUENCE {
    type      OBJECT IDENTIFIER,
    value     UTF8String
}

HashRDNSequence ::= SEQUENCE OF HashRelativeDistinguishedName

HashRelativeDistinguishedName  ::=
      SET SIZE (1 .. MAX) OF HashSingleAttribute

-- Used to workaround that some CAs create too long User Notices

OTPCertificatePolicies ::= SEQUENCE SIZE (1..MAX) OF OTPPolicyInformation

OTPPolicyInformation ::= SEQUENCE {
     policyIdentifier   CertPolicyId,
     policyQualifiers   SEQUENCE SIZE (1..MAX) OF
                OTPPolicyQualifierInfo OPTIONAL }

CertPolicyId ::= OBJECT IDENTIFIER

CERT-POLICY-QUALIFIER ::= TYPE-IDENTIFIER

OTPPolicyQualifierInfo ::= SEQUENCE {
       policyQualifierId  CERT-POLICY-QUALIFIER.
            &id({PolicyQualifierId}),
       qualifier          CERT-POLICY-QUALIFIER.
            &Type({PolicyQualifierId}{@policyQualifierId})}

-- Implementations that recognize additional policy qualifiers MUST
-- augment the following definition for PolicyQualifierId

PolicyQualifierId CERT-POLICY-QUALIFIER ::=
    { pqid-cps | pqid-unotice, ... }

pqid-cps CERT-POLICY-QUALIFIER ::= { CPSuri IDENTIFIED BY id-qt-cps }
pqid-unotice CERT-POLICY-QUALIFIER ::= { OTPUserNotice
    IDENTIFIED BY id-qt-unotice }

-- CPS pointer qualifier

CPSuri ::= IA5String

OTPUserNotice ::= SEQUENCE {
     noticeRef        NoticeReference OPTIONAL,
     explicitText     OTPDisplayText OPTIONAL}

-- NoticeReference ::= SEQUENCE {
--     organization     OTPDisplayText,
--     noticeNumbers    SEQUENCE OF INTEGER }

OTPDisplayText ::= CHOICE {
     ia5String        IA5String      (SIZE (1..650)),
     visibleString    VisibleString  (SIZE (1..650)),
     bmpString        BMPString      (SIZE (1..650)),
     utf8String       UTF8String     (SIZE (1..650)) }

END
